{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetail.js","components/auth/Signin.js","components/auth/Signup.js","components/projects/CreateProject.js","store/actions/projectActions.js","store/constants.js","App.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/index.js","config/firebaseConfig.js","serviceWorker.js","index.js"],"names":["connect","dispatch","signOut","getState","a","async","getFirebase","firebase","auth","type","profile","className","to","onClick","initials","SignedInLinks","state","links","uid","SignedOutLinks","Notification","notifications","map","id","user","content","time","key","moment","toDate","fromNow","ProjectSummary","props","project","authorFirstName","authorLastName","title","createdAt","calendar","ProjectList","projects","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","authError","signIn","creds","credentials","signInWithEmailAndPassword","email","password","payload","useState","setEmail","setPassword","onSubmit","e","preventDefault","htmlFor","value","onChange","target","signUp","firstName","lastName","getFirestore","createUserWithEmailAndPassword","response","doc","set","setFirstName","setLastName","createProject","authorId","add","authorLastname","Date","history","setTitle","setContent","push","App","path","component","Dashboard","exact","ProjectDetail","Signin","Signup","CreateProject","initState","authReducer","action","message","projectReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Boolean","window","location","hostname","middlewares","thunk","withExtraArgument","store","createStore","rootReducer","applyMiddleware","reduxFirestore","firebaseConfig","rrfProps","config","userProfile","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","children","useSelector","isLoaded","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44a7af03.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SignedInLinks = ({ signOut, profile }) => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Project</NavLink>\n      </li>\n      <li>\n        <button onClick={signOut}>Log Out</button>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => dispatch(signOut())\n  };\n};\n\nconst mapStateToProps = dispatch => {};\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","export const signIn = credentials => {\n  return async (dispatch, getState, { getFirebase }) => {\n    try {\n      const firebase = getFirebase();\n      await firebase\n        .auth()\n        .signInWithEmailAndPassword(credentials.email, credentials.password);\n\n      dispatch({ type: \"LOGIN_SUCCESS\" });\n    } catch (err) {\n      dispatch({ type: \"LOGIN_ERROR\", payload: err });\n    }\n  };\n};\n\nexport const signOut = () => {\n  return async (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    await firebase.auth().signOut();\n    dispatch({ type: \"SIGNOUT_SUCCESS\" });\n  };\n};\n\nexport const signUp = ({ email, password, firstName, lastName }) => {\n  return async (dispatch, getState, { getFirebase, getFirestore }) => {\n    try {\n      const firebase = getFirebase();\n      const firestore = getFirestore();\n      let response = await firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password);\n      await firestore\n        .collection(\"users\")\n        .doc(response.user.uid)\n        .set({\n          firstName,\n          lastName,\n          initials: firstName[0] + lastName[0]\n        });\n      dispatch({ type: \"SIGNUP_SUCCESS\" });\n    } catch (err) {\n      dispatch({ type: \"SIGNUP_FAIL\", payload: err });\n    }\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedInLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedInLinks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\n\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\n\nconst Navbar = ({ auth, profile }) => {\n  const links = auth.uid ? (\n    <SignedInLinks profile={profile} />\n  ) : (\n    <SignedOutLinks />\n  );\n  return (\n    <nav>\n      <div className=\"nav-wrapper grey darken-3\">\n        <Link to=\"/\" className=\"brand-logo\">\n          Planner\n        </Link>\n        {links}\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.firebase.profile,\n    auth: state.firebase.auth\n  };\n};\n\nexport default connect(mapStateToProps, null)(Navbar);\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Notification = ({ notifications }) => {\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\"></span>\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map(({ id, user, content, time }) => {\n                return (\n                  <li key={id}>\n                    <span className=\"pink-text\">{user} </span>\n                    <span>{content}</span>\n                    <div className=\"grey-text note-date\">\n                      {moment(time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst ProjectSummary = props => {\n  let { authorFirstName, authorLastName, title, createdAt } = props.project;\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{title}</span>\n        <p>\n          Posted by: {authorFirstName} {authorLastName}\n        </p>\n        <p className=\"grey-text\">{moment(createdAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ProjectSummary from \"./ProjectSummary\";\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"project-list section\">\n      {projects &&\n        projects.map(project => {\n          return (\n            <Link key={project.id} to={\"/project/\" + project.id}>\n              <ProjectSummary key={project.id} project={project} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport Notifications from \"./Notification\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Dashboard = ({ projects, auth, notifications }) => {\n  if (!auth.uid) {\n    return <Redirect to=\"/signin\" />;\n  }\n  return (\n    <div className=\"dashboard container\">\n      <div className=\"row\">\n        <div className=\"col s12 m6\">\n          <ProjectList projects={projects} />\n        </div>\n        <div className=\"col s12 m5 offset-m1\">\n          <Notifications notifications={notifications} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, null),\n  firestoreConnect([\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\n    { collection: \"notifications\", limit: 5, orderBy: [\"time\", \"desc\"] }\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nconst ProjectDetail = ({ project, auth }) => {\n  if (project) {\n    let {\n      authorFirstName,\n      authorLastName,\n      content,\n      title,\n      createdAt\n    } = project;\n\n    if (!auth.uid) {\n      return <Redirect to=\"/signin\" />;\n    }\n\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\"> {title}</span>\n            <p>{content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>\n              Posted by: {authorFirstName} {authorLastName}\n            </div>\n            <div>{moment(createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return <div className=\"container section project-details\">Loading...</div>;\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, null),\n  firestoreConnect([\n    {\n      collection: \"projects\"\n    }\n  ])\n)(ProjectDetail);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\n\nimport { Redirect } from \"react-router-dom\";\n\nconst Signin = ({ signIn, authError, auth }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    signIn({ email, password });\n  };\n  if (auth.uid) return <Redirect to=\"/\" />;\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit} className=\"white\">\n        <h5 className=\"grey-text text-darken-3\">Sign in</h5>\n        <div className=\"input-field\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          />\n        </div>\n        <div className=\"input-field\">\n          <button className=\"button btn ping lighten-1 z-depth-0\">Login</button>\n          <div className=\"red-text center\">{authError ? authError : null}</div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: creds => dispatch(signIn(creds))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { signUp } from \"../../store/actions/authActions\";\n\nconst Signup = ({ auth, signUp, authError }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    signUp({ email, password, firstName, lastName });\n  };\n\n  if (auth.uid) return <Redirect to=\"/\" />;\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit} className=\"white\">\n        <h5 className=\"grey-text text-darken-3\">Sign in</h5>\n        <div className=\"input-field\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"firstName\">First Name</label>\n          <input\n            type=\"text\"\n            value={firstName}\n            onChange={e => setFirstName(e.target.value)}\n          />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"lastName\">Last Name</label>\n          <input\n            type=\"text\"\n            value={lastName}\n            onChange={e => setLastName(e.target.value)}\n          />\n        </div>\n        <div className=\"input-field\">\n          <button className=\"button btn ping lighten-1 z-depth-0\">\n            Signup\n          </button>\n          <div className=\"red-text center\">\n            {authError ? <p>{authError}</p> : null}\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: user => dispatch(signUp(user))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { createProject } from \"../../store/actions/projectActions\";\n\nconst CreateProject = ({ createProject, auth, history }) => {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createProject({ title, content });\n    history.push(\"/\");\n  };\n  if (!auth.uid) {\n    return <Redirect to=\"/signin\" />;\n  }\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit} className=\"white\">\n        <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n        <div className=\"input-field\">\n          <label htmlFor=\"title\">Title</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n          />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"content\">Content</label>\n          <textarea\n            id=\"content\"\n            className=\"materialize-textarea\"\n            value={content}\n            onChange={e => setContent(e.target.value)}\n          />\n        </div>\n        <div className=\"input-field\">\n          <button className=\"button btn ping lighten-1 z-depth-0\">\n            Create\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: project => dispatch(createProject(project))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","import { CREATE_PROJECT, CREATE_PROJECT_ERROR } from \"../constants\";\n\nexport const createProject = project => async (\n  dispatch,\n  getState,\n  { getFirestore, getFirebase }\n) => {\n  try {\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    await firestore.collection(\"projects\").add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastname: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    });\n\n    dispatch({ type: CREATE_PROJECT, payload: project });\n  } catch (e) {\n    dispatch({ type: CREATE_PROJECT_ERROR, payload: e });\n  }\n};\n","export const CREATE_PROJECT = \"CREATE_PROJECT\";\nexport const CREATE_PROJECT_ERROR = \"CREATE_PROJECT_ERROR\";\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetail from \"./components/projects/ProjectDetail\";\nimport Signin from \"./components/auth/Signin\";\nimport Signup from \"./components/auth/Signup\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nimport \"../src/index.css\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route path=\"/\" component={Dashboard} exact />\n          <Route path=\"/project/:id\" component={ProjectDetail} />\n          <Route path=\"/signin\" component={Signin} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const initState = {\n  authError: null\n};\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      return { ...state, authError: \"Login Failed\" };\n    case \"LOGIN_SUCCESS\":\n      return { ...state, authError: null };\n    case \"SIGNOUT_SUCCESS\":\n      return state;\n\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"Signup success\");\n      return { ...state, authError: null };\n    case \"SIGNUP_FAIL\":\n      console.log(action.payload);\n      return { ...state, authError: action.payload.message };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { CREATE_PROJECT, CREATE_PROJECT_ERROR } from \"../constants\";\n\nconst initState = {\n  projects: [\n    { id: \"1\", title: \"Help me find\", content: \"This is the content of id 1\" },\n    { id: \"2\", title: \"Test me find\", content: \"This is the content of id 2\" },\n    { id: \"3\", title: \"Kill me find\", content: \"This is the content of id 3\" }\n  ]\n};\nconst projectReducer = (state = initState, action, props) => {\n  switch (action.type) {\n    case CREATE_PROJECT:\n      return state;\n    case CREATE_PROJECT_ERROR:\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;\n","import { combineReducers } from \"redux\";\n\nimport authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from \"redux-firestore\";\n\nexport default combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer\n});\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBNMRdVQWalRXfH5NRYsE2_N5e1xmhb3Ug\",\n  authDomain: \"planner-86fd6.firebaseapp.com\",\n  databaseURL: \"https://planner-86fd6.firebaseio.com\",\n  projectId: \"planner-86fd6\",\n  storageBucket: \"planner-86fd6.appspot.com\",\n  messagingSenderId: \"84263011015\",\n  appId: \"1:84263011015:web:8aeea398fe91de7d11f4e2\",\n  measurementId: \"G-D5PHCMNGF6\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport firebase from \"firebase/app\";\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider, useSelector } from \"react-redux\";\n\nimport {\n  ReactReduxFirebaseProvider,\n  getFirebase,\n  isLoaded\n} from \"react-redux-firebase\";\nimport {\n  createFirestoreInstance,\n  getFirestore,\n  reduxFirestore\n} from \"redux-firestore\";\n\nimport thunk from \"redux-thunk\";\n\nimport rootReducer from \"./store/reducers\";\nimport firebaseConfig from \"./config/firebaseConfig\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst initialState = {};\n\nconst middlewares = [thunk.withExtraArgument({ getFirebase, getFirestore })];\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n  attachAuthIsReady: true\n};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(applyMiddleware(...middlewares), reduxFirestore(firebaseConfig))\n);\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth);\n  if (!isLoaded(auth)) return <div>splash screen...</div>;\n  return children;\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}